# THIS FILE IS MEANT TO BE AN EXAMPLE DOCKER COMPOSE FILE TO RUN THE BOT

version: "3.8"

services:
  # Bot service
  inhouse_bot:
    image: renkon/inhouse_bot
    environment:
      # The connection string is an SQLAlchemy connection string, does not need a password since it uses sockets
      INHOUSE_BOT_CONNECTION_STRING: postgresql+psycopg2://postgres:@/inhouse_bot

      # You need to put your Discord Bot token here
      INHOUSE_BOT_TOKEN: OTU1NDczMjc0MTc3OTk4OTc4.YjiL1A.SiEvSIEug1_QWdfK-O_z6b1f2ac

      # Those emoji help the bot look good and are defined with discord.py emoji syntax
      INHOUSE_BOT_TOP_EMOJI: '<:toplol:955476278281138250>'
      INHOUSE_BOT_JGL_EMOJI: '<:jglol:955476289748365353>'
      INHOUSE_BOT_MID_EMOJI: '<:midlol:955476256101654588>'
      INHOUSE_BOT_BOT_EMOJI: '<:botlol:955476266025369690>'
      INHOUSE_BOT_SUP_EMOJI: '<:suplol:955476242407243796>'

    volumes:
      # Socket volume to connect to the database
      - type: volume
        source: dbsocket
        target: /var/run/postgresql

    depends_on:
      - db

  # Database service for the bot
  db:
    image: postgres:alpine
    volumes:
      # Database persistence volume
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/data
      # Socket volume to communicate faster
      - type: volume
        source: dbsocket
        target: /var/run/postgresql
    environment:
      # CHANGE THE PASSWORD BEFORE DEPLOYMENT
      POSTGRES_PASSWORD: r4nd0mp455w0rd
      POSTGRES_DB: inhouse_bot

  # Simple database management tool (will use the password you set for the db service)
  adminer:
    image: adminer
    depends_on:
      - db
    ports:
      - 8080:8080


volumes:
  pgdata:     # Persistent data volume for the database
  dbsocket:   # Socket mounting volume
